openapi: 3.1.0
info:
  title: Public Robot Events API
  version: 1.0.21
  description: |
    An API to access data on Robot Events officially.
    ## Request Metadata
    Pagination is performed the same way throughout each pageable endpoint using the query parameters `page` and `per_page`.
    Please not that dates should be formatted according to RFC3339.
servers:
  - url: 'https://www.robotevents.com/api/v2'
paths:
  /events:
    get:
      operationId: event_getEvents
      description: Gets a List of Events
      parameters:
        - name: 'id[]'
          in: query
          description: The Event ID
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
            examples:
              - - 26828
                - 34509
                - 29916
          explode: true
          style: form
        - name: 'sku[]'
          in: query
          description: The Event SKU
          required: false
          schema:
            type: array
            items:
              type: string
            examples:
              - - RE-VRC-18-1234
                - RE-VRC-18-5678
          explode: true
          style: form
        - name: 'team[]'
          in: query
          description: Teams that participated in the Event
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
            examples:
              - - 151461
                - 67381
          explode: true
          style: form
        - name: 'season[]'
          in: query
          description: The Season that the Event belonged to
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
            examples:
              - - 173
                - 102
          explode: true
          style: form
        - name: start
          in: query
          description: The Start Date of the Event
          required: false
          schema:
            type: string
            format: date-time
            examples:
              - '2018-10-01T00:00:00.000Z'
        - name: end
          in: query
          description: The End Date of the Event
          required: false
          schema:
            type: string
            format: date-time
            examples:
              - '2018-10-01T00:00:00.000Z'
        - name: region
          in: query
          description: The region of the event
          required: false
          schema:
            type: string
            examples:
              - California
        - name: 'level[]'
          in: query
          description: The Event Level
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - World
                - National
                - State
                - Signature
                - Other
          explode: true
          style: form
        - name: myEvents
          in: query
          description: Only show events that have at least one registered team associated with the authenticated user.
          required: false
          schema:
            type: boolean
            default: false
        - name: 'eventTypes[]'
          in: query
          description: The Event Type
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/EventType'
          explode: true
          style: form
      responses:
        '200':
          description: List of Events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEvent'
      tags:
        - Event
  '/events/{id}':
    get:
      operationId: event_getEvent
      description: Gets a Single Event
      parameters:
        - name: id
          in: path
          description: The ID of the Event
          required: true
          schema:
            type: integer
            format: int32
            examples:
              - 26828
      responses:
        '200':
          description: A single Event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '404':
          description: Specified Event not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - Event
  '/events/{id}/teams':
    get:
      operationId: event_getTeams
      description: Gets a List of Teams present at a given Event
      parameters:
        - name: id
          in: path
          description: The ID of the Event
          required: true
          schema:
            type: integer
            format: int32
            examples:
              - 25776
        - name: 'number[]'
          in: query
          description: Team Number
          required: false
          schema:
            type: array
            items:
              type: string
            examples:
              - - 5327S
                - 5327K
                - 5327X
                - 80001B
                - 606X
                - 1408F
          explode: true
          style: form
        - name: registered
          in: query
          description: Whether the Team is Registered
          required: false
          schema:
            type: boolean
        - name: 'grade[]'
          in: query
          description: The Grade of the Team
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - College
                - High School
                - Middle School
                - Elementary School
          explode: true
          style: form
        - name: 'country[]'
          in: query
          description: The Country of the Team
          required: false
          schema:
            type: array
            items:
              type: string
            examples:
              - - United States
                - Canada
                - China
          explode: true
          style: form
        - name: myTeams
          in: query
          description: Only show teams associated with the authenticated user.
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: List of Teams
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTeam'
      tags:
        - Event
  '/events/{id}/skills':
    get:
      operationId: event_getSkills
      description: Gets a List of Skills runs performed at a given Event
      parameters:
        - name: id
          in: path
          description: The ID of the Event
          required: true
          schema:
            type: integer
            format: int32
            examples:
              - 25776
        - name: 'team[]'
          in: query
          description: Team Number that performed the Skills run
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
          explode: true
          style: form
        - name: 'type[]'
          in: query
          description: Type of Skills run
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - driver
                - programming
          explode: true
          style: form
      responses:
        '200':
          description: A list of Skills
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSkill'
      tags:
        - Event
  '/events/{id}/awards':
    get:
      operationId: event_getAwards
      description: Gets a List of Awards at a given Event
      parameters:
        - name: id
          in: path
          description: The ID of the Event
          required: true
          schema:
            type: integer
            format: int32
            examples:
              - 25776
        - name: 'team[]'
          in: query
          description: Team ID that the Award was awarded to
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
            examples:
              - - 93452
                - 151461
                - 151462
          explode: true
          style: form
        - name: 'winner[]'
          in: query
          description: 'The Winner of the Award (can include people''s names, etc.)'
          required: false
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
      responses:
        '200':
          description: A list of Awards
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAward'
      tags:
        - Event
  '/events/{id}/divisions/{div}/matches':
    get:
      operationId: event_getDivisionMatches
      description: Gets a List of Matches for a single Division of an Event
      parameters:
        - name: id
          in: path
          description: The ID of the Event
          required: true
          schema:
            type: integer
            format: int32
            examples:
              - 25776
        - name: div
          in: path
          description: The ID of the Division
          required: true
          schema:
            type: integer
            format: int32
            examples:
              - 1
        - name: 'team[]'
          in: query
          description: Only return Matches which involved given Team IDs
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
            examples:
              - - 93452
                - 151461
                - 151462
          explode: true
          style: form
        - name: 'round[]'
          in: query
          description: |
            The Round of the Match.
            Some typical values are shown below:
            - 1 - Practice
            - 2 - Qualification
            - 3 - Quarter-Finals
            - 4 - Semi-Finals
            - 5 - Finals
            - 6 - Round of 16
            - etc.
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
          explode: true
          style: form
        - name: 'instance[]'
          in: query
          description: The Instance of the Match. This is used to describe which Quarter-Final match (for example) is being played
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
            examples:
              - - 1
                - 2
                - 3
          explode: true
          style: form
        - name: 'matchnum[]'
          in: query
          description: 'The MatchNum of the Match. This is the actual Match "number", e.g. Qualification Match, or the individual match in a Best of 3'
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
            examples:
              - - 1
                - 2
                - 3
                - 5
                - 10
                - 50
          explode: true
          style: form
      responses:
        '200':
          description: A list of Matches
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMatch'
      tags:
        - Event
  '/events/{id}/divisions/{div}/finalistRankings':
    get:
      operationId: event_getDivisionFinalistRankings
      description: Gets a List of Finalist Rankings for a single Division of an Event
      responses:
        '200':
          description: A list of Rankings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRanking'
      tags:
        - Event
    parameters:
      - name: id
        in: path
        description: The ID of the Event
        required: true
        schema:
          type: integer
          format: int32
          examples:
            - 25776
      - name: div
        in: path
        description: The ID of the Division
        required: true
        schema:
          type: integer
          format: int32
          examples:
            - 1
      - name: 'team[]'
        in: query
        description: Only return Rankings which involve given Team IDs
        required: false
        schema:
          type: array
          items:
            type: integer
            format: int32
          examples:
            - - 93452
              - 17141
              - 15172
        explode: true
        style: form
      - name: 'rank[]'
        in: query
        description: The Rank
        required: false
        schema:
          type: array
          items:
            type: integer
            format: int32
        explode: true
        style: form
  '/events/{id}/divisions/{div}/rankings':
    get:
      operationId: event_getDivisionRankings
      description: Gets a List of Rankings for a single Division of an Event
      parameters:
        - name: id
          in: path
          description: The ID of the Event
          required: true
          schema:
            type: integer
            format: int32
            examples:
              - 25776
        - name: div
          in: path
          description: The ID of the Division
          required: true
          schema:
            type: integer
            format: int32
            examples:
              - 1
        - name: 'team[]'
          in: query
          description: Only return Rankings which involve given Team IDs
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
            examples:
              - - 93452
                - 17141
                - 15172
          explode: true
          style: form
        - name: 'rank[]'
          in: query
          description: The Rank
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
          explode: true
          style: form
      responses:
        '200':
          description: A list of Rankings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRanking'
      tags:
        - Event
  /teams:
    get:
      operationId: team_getTeams
      description: Gets a List of Teams
      parameters:
        - name: 'id[]'
          in: query
          description: 'Team ID, the primary identifier used internally for a Team in the API, not the name'
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
            examples:
              - - 93452
                - 151461
                - 151462
          explode: true
          style: form
        - name: 'number[]'
          in: query
          description: 'Team Number, the primary identifier for a Team outside of the API'
          required: false
          schema:
            type: array
            items:
              type: string
            examples:
              - - 5327S
                - 5327X
                - 5327Z
                - 5327V
                - 80001B
                - 5327X
                - 606X
                - 1408F
          explode: true
          style: form
        - name: 'event[]'
          in: query
          description: The Events that Teams have attended
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
            examples:
              - - 25776
                - 33745
                - 45258
          explode: true
          style: form
        - name: registered
          in: query
          description: Whether or not the Team is Registered
          required: false
          schema:
            type: boolean
        - name: 'program[]'
          in: query
          description: The Program that the Team is part of
          required: false
          schema:
            type: array
            items:
              type: integer
            examples:
              - - 1
                - 2
                - 3
                - 4
          explode: true
          style: form
        - name: 'grade[]'
          in: query
          description: The Grade of the Team
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - College
                - High School
                - Middle School
                - Elementary School
          explode: true
          style: form
        - name: 'country[]'
          in: query
          description: The Country of the Team
          required: false
          schema:
            type: array
            items:
              type: string
            examples:
              - - United States
                - Canada
                - China
          explode: true
          style: form
        - name: myTeams
          in: query
          description: Only show teams associated with the authenticated user.
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: List of Teams
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTeam'
      tags:
        - Team
  '/teams/{id}':
    get:
      operationId: team_getTeam
      description: Gets a Single Team
      parameters:
        - name: id
          in: path
          description: 'The ID of the Team, the primary identifier used internally for a Team in the API, not the name'
          required: true
          schema:
            type: integer
            format: int32
            examples:
              - 93452
      responses:
        '200':
          description: A single Team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '404':
          description: Specified Team not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - Team
  '/teams/{id}/events':
    get:
      operationId: team_getEvents
      description: Gets a List of Events that a given Team has attended
      parameters:
        - name: id
          in: path
          description: 'The ID of the Team, the primary identifier used internally for a Team in the API, not the name'
          required: true
          schema:
            type: integer
            format: int32
            examples:
              - 93452
        - name: 'sku[]'
          in: query
          description: The Event SKU
          required: false
          schema:
            type: array
            items:
              type: string
            examples:
              - - RE-VRC-18-1234
                - RE-VRC-18-5678
          explode: true
          style: form
        - name: 'season[]'
          in: query
          description: The Season that the Event belonged to
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
            examples:
              - - 173
                - 154
                - 139
          explode: true
          style: form
        - name: start
          in: query
          description: The Start Date of the Event
          required: false
          schema:
            type: string
            format: date-time
            examples:
              - '2018-04-25T00:00:00.000Z'
        - name: end
          in: query
          description: The End Date of the Event
          required: false
          schema:
            type: string
            format: date-time
            examples:
              - '2018-04-25T00:00:00.000Z'
        - name: 'level[]'
          in: query
          description: The Event Level
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - World
                - National
                - State
                - Signature
                - Other
          explode: true
          style: form
      responses:
        '200':
          description: List of Events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEvent'
      tags:
        - Team
  '/teams/{id}/matches':
    get:
      operationId: team_getMatches
      description: Gets a List of Matches that a given Team has played in
      parameters:
        - name: id
          in: path
          description: 'The ID of the Team, the primary identifier used internally for a Team in the API, not the name'
          required: true
          schema:
            type: integer
            format: int32
            examples:
              - 93452
        - name: 'event[]'
          in: query
          description: The Event the Match was performed at
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
            examples:
              - - 25776
                - 33745
                - 45258
          explode: true
          style: form
        - name: 'season[]'
          in: query
          description: The Season during which the Match was played
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
            examples:
              - - 173
                - 154
                - 139
          explode: true
          style: form
        - name: 'round[]'
          in: query
          description: |
            The Round of the Match.
            Some typical values are shown below:
            - 1 - Practice
            - 2 - Qualification
            - 3 - Quarter-Finals
            - 4 - Semi-Finals
            - 5 - Finals
            - 6 - Round of 16
            - etc.
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
          explode: true
          style: form
        - name: 'instance[]'
          in: query
          description: The Instance of the Match. This is used to describe which Quarter-Final match (for example) is being played
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
            examples:
              - - 1
                - 2
                - 3
          explode: true
          style: form
        - name: 'matchnum[]'
          in: query
          description: 'The MatchNum of the Match. This is the actual Match "number", e.g. Qualification Match, or the individual match in a Best of 3'
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
            examples:
              - - 1
                - 2
                - 3
          explode: true
          style: form
      responses:
        '200':
          description: List of Matches
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMatch'
      tags:
        - Team
  '/teams/{id}/rankings':
    get:
      operationId: team_getRankings
      description: Gets a List of Rankings for a given Team
      parameters:
        - name: id
          in: path
          description: 'The ID of the Team, the primary identifier used internally for a Team in the API, not the name'
          required: true
          schema:
            type: integer
            format: int32
            examples:
              - 93452
        - name: 'event[]'
          in: query
          description: The Event in which the Ranking was achieved
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
            examples:
              - - 25776
                - 33745
                - 45258
          explode: true
          style: form
        - name: 'rank[]'
          in: query
          description: The Rank
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
            examples:
              - - 1
                - 2
                - 3
          explode: true
          style: form
        - name: 'season[]'
          in: query
          description: The Season during which the Ranking was
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
            examples:
              - - 173
                - 154
                - 139
          explode: true
          style: form
      responses:
        '200':
          description: List of Rankings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRanking'
      tags:
        - Team
  '/teams/{id}/skills':
    get:
      operationId: team_getSkills
      description: Gets a List of Skills runs that a given Team has performed
      parameters:
        - name: id
          in: path
          description: 'The ID of the Team, the primary identifier used internally for a Team in the API, not the name'
          required: true
          schema:
            type: integer
            format: int32
            examples:
              - 93452
        - name: 'event[]'
          in: query
          description: The Event at which the Skills run was performed
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
            examples:
              - - 25776
                - 33745
                - 45258
          explode: true
          style: form
        - name: 'type[]'
          in: query
          description: Type of Skills run
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - driver
                - programming
          explode: true
          style: form
        - name: 'season[]'
          in: query
          description: The Season during which the Skills run was performed
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
            examples:
              - - 173
                - 154
                - 139
          explode: true
          style: form
      responses:
        '200':
          description: A list of Skills
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSkill'
      tags:
        - Team
  '/teams/{id}/awards':
    get:
      operationId: team_getAwards
      description: Gets a List of Awards that a given Team has received
      parameters:
        - name: id
          in: path
          description: 'The ID of the Team, the primary identifier used internally for a Team in the API, not the name'
          required: true
          schema:
            type: integer
            format: int32
        - name: 'event[]'
          in: query
          description: The Event at which the Award was given out
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
            examples:
              - - 25776
                - 33745
                - 45258
          explode: true
          style: form
        - name: 'season[]'
          in: query
          description: The Season in which the Award was given out
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
            examples:
              - - 173
                - 154
                - 139
          explode: true
          style: form
      responses:
        '200':
          description: List of Awards
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAward'
      tags:
        - Team
  '/programs/{id}':
    get:
      operationId: program_getProgram
      description: Find a single Program by ID
      parameters:
        - name: id
          in: path
          description: The Program ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Single Program
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Program'
      tags:
        - Program
  /programs:
    get:
      operationId: program_getPrograms
      description: Gets a List of Programs
      parameters:
        - name: 'id[]'
          in: query
          description: The program ID
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
          explode: true
          style: form
      responses:
        '200':
          description: List of Programs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProgram'
      tags:
        - Program
  /seasons:
    get:
      operationId: season_getSeasons
      description: Gets a List of Seasons
      parameters:
        - name: 'id[]'
          in: query
          description: The Season ID
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
          explode: true
          style: form
        - name: 'program[]'
          in: query
          description: The Program to which the Season belongs
          required: false
          schema:
            type: array
            items:
              type: integer
          explode: true
          style: form
        - name: 'team[]'
          in: query
          description: The seasons in which the specified teams were active
          required: false
          schema:
            type: array
            items:
              type: integer
          explode: true
          style: form
        - name: start
          in: query
          description: The Start Date of the Season
          required: false
          schema:
            type: string
            format: date-time
        - name: end
          in: query
          description: The End Date of the Season
          required: false
          schema:
            type: string
            format: date-time
        - name: active
          in: query
          description: Only include active Seasons
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: List of Seasons
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSeason'
      tags:
        - Season
  '/seasons/{id}':
    get:
      operationId: season_getSeason
      description: Gets a single Season
      parameters:
        - name: id
          in: path
          description: The Season ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A single Season
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Season'
      tags:
        - Season
  '/seasons/{id}/events':
    get:
      operationId: season_getEvents
      description: Gets a List of Events for a given Season
      parameters:
        - name: id
          in: path
          description: The Season ID
          required: true
          schema:
            type: integer
            format: int32
        - name: 'sku[]'
          in: query
          description: The Event SKU
          required: false
          schema:
            type: array
            items:
              type: string
          explode: true
          style: form
        - name: 'team[]'
          in: query
          description: Teams that participated in the Event
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
          explode: true
          style: form
        - name: start
          in: query
          description: The Start Date of the Event
          required: false
          schema:
            type: string
            format: date-time
        - name: end
          in: query
          description: The End Date of the Event
          required: false
          schema:
            type: string
            format: date-time
        - name: 'level[]'
          in: query
          description: The Event Level
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - World
                - National
                - State
                - Signature
                - Other
          explode: true
          style: form
      responses:
        '200':
          description: List of Events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEvent'
      tags:
        - Season
components:
  schemas:
    Event:
      type: object
      properties:
        id:
          type: integer
          format: int32
        sku:
          type: string
        name:
          type: string
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        season:
          $ref: '#/components/schemas/IdInfo'
        program:
          $ref: '#/components/schemas/IdInfo'
        location:
          $ref: '#/components/schemas/Location'
        locations:
          type: array
          items:
            $ref: '#/components/schemas/Locations'
        divisions:
          type: array
          items:
            $ref: '#/components/schemas/Division'
        level:
          $ref: '#/components/schemas/EventLevel'
        ongoing:
          type: boolean
        awards_finalized:
          type: boolean
        event_type:
          $ref: '#/components/schemas/EventType'
      required:
        - id
        - sku
        - name
        - season
        - program
        - location
    EventType:
      type: string
      enum:
        - tournament
        - league
        - workshop
        - virtual
    Program:
      type: object
      properties:
        id:
          type: integer
          format: i32
        abbr:
          type: string
        name:
          type: string
    EventLevel:
      type: string
      enum:
        - World
        - National
        - Regional
        - State
        - Signature
        - Other
    Location:
      type: object
      properties:
        venue:
          type: string
        address_1:
          type: string
        address_2:
          type: string
        city:
          type: string
        region:
          type: string
        postcode:
          type: string
        country:
          type: string
        coordinates:
          $ref: '#/components/schemas/Coordinates'
    Coordinates:
      type: object
      properties:
        lat:
          type: number
          format: float
        lon:
          type: number
          format: float
    Locations:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Location'
    Division:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        order:
          type: integer
          format: int32
    Grade:
      type: string
      enum:
        - College
        - High School
        - Middle School
        - Elementary School
    Team:
      type: object
      properties:
        id:
          type: integer
          format: int32
          examples:
            - 93452
        number:
          type: string
          examples:
            - 5327K
        team_name:
          type: string
          examples:
            - The Kreamers
        robot_name:
          type: string
        organization:
          type: string
        location:
          $ref: '#/components/schemas/Location'
        registered:
          type: boolean
        program:
          $ref: '#/components/schemas/IdInfo'
        grade:
          $ref: '#/components/schemas/Grade'
      required:
        - id
        - number
        - program
    IdInfo:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        code:
          type:
            - string
            - 'null'
      required:
        - id
        - name
    MatchObj:
      type: object
      properties:
        id:
          type: integer
          format: int32
        event:
          $ref: '#/components/schemas/IdInfo'
        division:
          $ref: '#/components/schemas/IdInfo'
        round:
          type: integer
          format: int32
        instance:
          type: integer
          format: int32
        matchnum:
          type: integer
          format: int32
        scheduled:
          type: string
          format: date-time
        started:
          type: string
          format: date-time
        field:
          type: string
        scored:
          type: boolean
        name:
          type: string
        alliances:
          type: array
          items:
            $ref: '#/components/schemas/Alliance'
      required:
        - id
        - event
        - division
        - round
        - instance
        - matchnum
        - scored
        - alliances
        - name
    Alliance:
      type: object
      properties:
        color:
          type: string
          enum:
            - red
            - blue
        score:
          type: integer
          format: int32
        teams:
          type: array
          items:
            $ref: '#/components/schemas/AllianceTeam'
      required:
        - color
        - score
        - teams
    AllianceTeam:
      type: object
      properties:
        team:
          $ref: '#/components/schemas/IdInfo'
        sitting:
          type: boolean
    Ranking:
      type: object
      properties:
        id:
          type: integer
          format: int32
        event:
          $ref: '#/components/schemas/IdInfo'
        division:
          $ref: '#/components/schemas/IdInfo'
        rank:
          type: integer
          format: int32
        team:
          $ref: '#/components/schemas/IdInfo'
        wins:
          type: integer
          format: int32
        losses:
          type: integer
          format: int32
        ties:
          type: integer
          format: int32
        wp:
          type: integer
          format: int32
        ap:
          type: integer
          format: int32
        sp:
          type: integer
          format: int32
        high_score:
          type: integer
          format: int32
        average_points:
          type: number
        total_points:
          type: integer
          format: int32
    Skill:
      type: object
      properties:
        id:
          type: integer
          format: int32
        event:
          $ref: '#/components/schemas/IdInfo'
        team:
          $ref: '#/components/schemas/IdInfo'
        type:
          $ref: '#/components/schemas/SkillType'
        season:
          $ref: '#/components/schemas/IdInfo'
        division:
          $ref: '#/components/schemas/IdInfo'
        rank:
          type: integer
          format: int32
        score:
          type: integer
          format: int32
        attempts:
          type: integer
          format: int32
    SkillType:
      type: string
      enum:
        - driver
        - programming
        - package_delivery_time
    Award:
      type: object
      properties:
        id:
          type: integer
          format: int32
        event:
          $ref: '#/components/schemas/IdInfo'
        order:
          type: integer
          format: int32
        title:
          type: string
        qualifications:
          type: array
          items:
            type: string
        designation:
          description: Some awards are given out per tournament or division
          type:
            - string
            - 'null'
          enum:
            - tournament
            - division
        classification:
          type:
            - string
            - 'null'
          enum:
            - champion
            - finalist
            - semifinalist
            - quarterfinalist
        teamWinners:
          type: array
          items:
            $ref: '#/components/schemas/TeamAwardWinner'
        individualWinners:
          type: array
          items:
            type: string
    TeamAwardWinner:
      type: object
      properties:
        division:
          $ref: '#/components/schemas/IdInfo'
        team:
          $ref: '#/components/schemas/IdInfo'
    Season:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        program:
          $ref: '#/components/schemas/IdInfo'
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        years_start:
          type: integer
          format: int32
        years_end:
          type: integer
          format: int32
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    PageMeta:
      type: object
      properties:
        current_page:
          type: integer
        first_page_url:
          type: string
        from:
          type: integer
        last_page:
          type: integer
        last_page_url:
          type: string
        next_page_url:
          type: string
        path:
          type: string
        per_page:
          type: integer
        prev_page_url:
          type: string
        to:
          type: integer
        total:
          type: integer
    PaginatedTeam:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/PageMeta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Team'
    PaginatedEvent:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/PageMeta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Event'
    PaginatedAward:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/PageMeta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Award'
    PaginatedSeason:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/PageMeta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Season'
    PaginatedRanking:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/PageMeta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Ranking'
    PaginatedMatch:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/PageMeta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MatchObj'
    PaginatedSkill:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/PageMeta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Skill'
    PaginatedProgram:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/PageMeta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Program'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []
